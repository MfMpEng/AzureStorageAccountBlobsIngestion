{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "FunctionName": {
            "defaultValue": "logSource",
            "minLength": 3,
            "maxLength": 12,
            "type": "string",
            "metadata": {
                "description": "Specifies the name of the Function App. Max char 14, only lowerscase alphanumeric chars"
            }
        },
        "LATableName": {
            "minLength": 1,
            "defaultValue": "logSourceName_CL",
            "type": "string",
            "metadata": {
                "description": "Specifies the name of the Log Analytics table to ingest into. Batteries not included."
            }
        },
        "WorkspaceResourceId": {
            "minLength": 116,
            "defaultValue": "/subscriptions/SUBSCRIPTIONID/resourcegroups/RESOURCEGROUPNAME/providers/microsoft.operationalinsights/workspaces/LAWORKSPACENAME",
            "type": "string",
            "metadata": {
                "description": "Specifies the Azure Log Analytics Workspace resourceId. Copy from Sentinel LA workspace overview - view json"
            }
        },
        "WorkspaceId": {
            "minLength": 36,
            "maxLength": 36,
            "defaultValue": "88888888-4444-4444-4444-121212121212",
            "type": "string",
            "metadata": {
                "description": "Specifies the Azure Log Analytics Workspace Id."
            }
        },
        "WorkspaceKey": {
            "type": "securestring",
            "metadata": {
                "description": "Specifies the Azure Log Analytics Workspace Key."
            }
        }
    },
    "variables": {
        "HashName"       : "[concat(uniqueString(resourceGroup().id), uniqueString(subscription().id))]",
        "FunctionName"   : "[substring(toLower(concat('fa-', parameters('FunctionName'), '-', variables('HashName') )) ,0,31)]",
        "StgActName"     : "[concat( substring( toLower( concat ( parameters('FunctionName'), variables('HashName') ) ), 0, 21 ), 'sa') ]",
        "AppSvcPlanName" : "[concat(variables('FunctionName'),'-AppSvcPlan')]",
        "StgCntName"     : "[concat(substring(toLower(variables('FunctionName')), 3, 28), '-2blob')]",
        "KeyVaultName"   : "[concat(substring(        variables('FunctionName'), 3, 20) , '-kv')]",
        "NetSecPerimName": "[concat(substring(        variables('FunctionName'), 3, 20) , '-NSP')]",
        "EvtGridSubName" : "[concat(substring(        variables('FunctionName'), 3, 28) , '-EvtSub')]",
        "EGSTopicName"   : "[concat(substring(        variables('FunctionName'), 3, 28) , '-EvtGrid')]",
        "AppInsightsName": "[concat(substring(        variables('FunctionName'), 3, 28) , '-webApInsgt')]",
        "LogAnaltyicsUri": "[replace(environment().portal, 'https://portal', concat('https://', toLower(parameters('WorkspaceId')), '.ods.opinsights'))]",
        "StorageSuffix"  : "[environment().suffixes.storage]",
        "LAWorkspaceKey" : "LogAnalyticsWorkspaceKey",
        "StgQueueName"   : "sourcelogsqueue"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2024-01-01",
            "name": "[variables('StgActName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": false,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "encryption": {
                    "keySource": "Microsoft.Storage",
                    "services": {
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    }
                },
                "supportsHttpsTrafficOnly": true
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2024-01-01",
            "name": "[concat(variables('StgActName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', tolower(variables('StgActName')))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            },
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2024-01-01",
            "name": "[concat(variables('StgActName'), '/default/azure-webjobs-secrets')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('StgActName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('StgActName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2024-01-01",
            "name": "[concat(variables('StgActName'), concat('/default/', variables('StgCntName')))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('StgActName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('StgActName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2024-01-01",
            "name": "[concat(variables('StgActName'), '/default/azure-webjobs-hosts')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('StgActName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('StgActName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2024-01-01",
            "name": "[concat(variables('StgActName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', tolower(variables('StgActName')))]"
            ],
            "properties": {
                "protocolSettings": {
                    "smb": {
                        "versions": "SMB3.0;SMB3.1.1;",
                        "authenticationMethods": "NTLMv2;Kerberos;",
                        "kerberosTicketEncryption": "AES-256;",
                        "channelEncryption": "AES-128-GCM;AES-256-GCM;"
                    }
                },
                "cors": {
                    "corsRules": []
                }
            },
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "apiVersion": "2024-01-01",
            "name": "[concat(variables('StgActName'), '/default/', tolower(variables('StgActName')))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', variables('StgActName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('StgActName'))]"
            ],
            "properties": {
                "shareQuota": 5120
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices",
            "apiVersion": "2024-01-01",
            "name": "[concat(variables('StgActName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', tolower(variables('StgActName')))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            },
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('StgActName'), concat('/default/', variables('StgQueueName')))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/queueServices', variables('StgActName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('StgActName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2024-04-01",
            "name": "[variables('AppSvcPlanName')]",
            "kind": "functionapp",
            "location": "[resourceGroup().location]",
            "properties": {
                "name": "[variables('AppSvcPlanName')]",
                "numberOfWorkers": "1",
                "workerSize": "0",
                "workerSizeId": "0"
            },
            "sku": {
                "name": "Y1",
                "tier": "Dynamic"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2024-04-01",
            "name": "[variables('AppSvcPlanName')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "kind": "functionapp",
            "location": "[resourceGroup().location]",
            "properties": {
                "name": "[variables('AppSvcPlanName')]",
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('AppSvcPlanName'))]",
                "siteConfig": {
                    "alwaysOn": false,
                    "httpsOnly": true,
                    "powerShellVersion": "7.4",
                    "netFrameworkVersion": "v4.0",
                    "scmIpSecurityRestrictionsUseMain": true,
                    "minTlsVersion": "1.2",
                    "scmMinTlsVersion": "1.2",
                    "http20Enabled": false,
                    "requestTracingEnabled": false,
                    "remoteDebuggingEnabled": false,
                    "httpLoggingEnabled": true,
                    "clientAffinityEnabled": true,
                    "cors": {
                        "allowedOrigins": [
                            "https://portal.azure.com"
                        ],
                        "supportCredentials": true
                    },
                    "properties": {
                        "numberOfWorkers": 1,
                        "defaultDocuments": [
                            "Default.htm",
                            "Default.html",
                            "Default.asp",
                            "index.htm",
                            "index.html",
                            "iisstart.htm",
                            "default.aspx",
                            "index.php"
                        ]
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', tolower(variables('StgActName')))]",
                "[resourceId('Microsoft.Web/serverfarms', variables('AppSvcPlanName'))]",
                "[resourceId('Microsoft.Insights/components', variables('AppInsightsName'))]"
            ],
            "resources": [
                {
                    "apiVersion": "2018-11-01",
                    "type": "config",
                    "name": "appsettings",
                    "dependsOn": [
                        "[concat('Microsoft.Web/sites/', variables('AppSvcPlanName'))]",
                        "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('KeyVaultName'), variables('LAWorkspaceKey'))]"
                    ],
                    "properties": {
                        "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('Microsoft.insights/components', variables('AppInsightsName')), '2015-05-01').InstrumentationKey]",
                        "APPLICATIONINSIGHTS_CONNECTION_STRING": "[reference(resourceId('microsoft.insights/components', variables('AppInsightsName')), '2015-05-01').ConnectionString]",
                        "AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=', toLower(variables('StgActName')),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', toLower(variables('StgActName'))), '2019-06-01').keys[0].value, ';EndpointSuffix=',toLower(variables('StorageSuffix')))]",
                        "FUNCTIONS_EXTENSION_VERSION": "~4",
                        "FUNCTIONS_WORKER_RUNTIME": "powershell",
                        "LAURI": "[variables('LogAnaltyicsUri')]",
                        "LATableName": "[parameters('LATableName')]",
                        "StgQueueName": "[variables('StgQueueName')]",
                        "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING": "[concat('DefaultEndpointsProtocol=https;AccountName=', toLower(variables('StgActName')),';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', toLower(variables('StgActName'))), '2019-06-01').keys[0].value, ';EndpointSuffix=',toLower(variables('StorageSuffix')))]",
                        "WEBSITE_CONTENTSHARE": "[toLower(variables('FunctionName'))]",
                        "WEBSITE_RUN_FROM_PACKAGE": "https://github.com/MfMpEng/AzureStorageAccountBlobsIngestion/blob/main/StorageAccountBlobsIngestion/AzureFunctionBlobsIngestion.zip?raw=true",
                        "WorkspaceId": "[parameters('WorkspaceId')]",
                        "LogAnalyticsWorkspaceKey": "[concat('@Microsoft.KeyVault(SecretUri=', reference(variables('LAWorkspaceKey')).secretUriWithVersion, ')')]"
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts/providers/eventSubscriptions",
            "name": "[concat(variables('StgActName'), '/Microsoft.EventGrid/', variables('EGSTopicName'))]",
            "apiVersion": "2020-01-01-preview",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('StgActName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('StgActName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', variables('StgActName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts/queueServices', variables('StgActName'), 'default')]"
            ],
            "properties": {
                "destination": {
                    "endpointType": "StorageQueue",
                    "properties": {
                        "resourceId": "[resourceId('Microsoft.Storage/storageAccounts', variables('StgActName'))]",
                        "queueName": "[variables('StgQueueName')]"
                    }
                },
                "eventDeliverySchema": "EventGridSchema",
                "filter": {
                    "includedEventTypes": [
                        "Microsoft.Storage.BlobCreated"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.EventGrid/systemTopics",
            "apiVersion": "2025-02-15",
            "name": "[variables('EGSTopicName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('StgActName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('StgActName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', variables('StgActName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts/queueServices', variables('StgActName'), 'default')]"
            ],
            "properties": {
                "source": "[resourceId('Microsoft.Storage/storageAccounts', variables('StgActName'))]",
                "topicType": "Microsoft.Storage.StorageAccounts"
            }
        },
        {
            "type": "Microsoft.Insights/components",
            "apiVersion": "2020-02-02",
            "name": "[variables('AppInsightsName')]",
            "kind": "web",
            "location": "[resourceGroup().location]",
            "properties": {
                "Application_Type": "web",
                "ApplicationId": "[variables('FunctionName')]",
                "ImmediatePurgeDataOn30Days": true,
                "RetentionInDays": 30,
                "WorkspaceResourceId": "[parameters('WorkspaceResourceId')]"

            }
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2024-12-01-preview",
            "name": "[variables('KeyVaultName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('AppSvcPlanName'))]"
            ],
            "properties": {
                "tenantId": "[subscription().tenantId]",
                "accessPolicies": [
                    {
                        "objectId": "[reference(resourceId('Microsoft.Web/sites', variables('FunctionName')),'2024-04-01', 'full').identity.principalId]",
                        "tenantId": "[subscription().tenantId]",
                        "permissions": {
                            "secrets": [
                                "get",
                                "list"
                            ]
                        }
                    }
                ],
                "sku": {
                    "family": "A",
                    "name": "standard"
                },
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": true,
                "enableSoftDelete": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "defaultAction": "deny",
                    "ipRules": [],
                    "virtualNetworkRules": []
                }
            },
            "resources": [
                {
                    "apiVersion": "2016-10-01",
                    "name": "[variables('LAWorkspaceKey')]",
                    "type": "secrets",
                    "dependsOn": [
                        "[resourceId('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]"
                    ],
                    "properties": {
                        "contentType": "string",
                        "value": "[parameters('WorkspaceKey')]",
                        "attributes": {
                            "enabled": true
                        }
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Network/networkSecurityPerimeters",
            "apiVersion": "2023-08-01-preview",
            "name": "[variables('NetSecPerimName')]",
            "location": "eastus",
            "properties": {}
        },
        {
            "type": "Microsoft.Network/networkSecurityPerimeters/profiles",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(variables('NetSecPerimName'), '/defaultProfile')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityPerimeters', variables('NetSecPerimName'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.Network/networkSecurityPerimeters/profiles/accessRules",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(variables('NetSecPerimName'), '/defaultProfile/AllowF5DistributedCloud')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityPerimeters/profiles', variables('NetSecPerimName'), 'defaultProfile')]",
                "[resourceId('Microsoft.Network/networkSecurityPerimeters', variables('NetSecPerimName'))]"
            ],
            "properties": {
                "direction": "Inbound",
                "addressPrefixes": [],
                "fullyQualifiedDomainNames": [],
                "subscriptions": [],
                "emailAddresses": [],
                "phoneNumbers": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityPerimeters/profiles/accessRules",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(variables('NetSecPerimName'), '/defaultProfile/AllowSub')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityPerimeters/profiles', variables('NetSecPerimName'), 'defaultProfile')]",
                "[resourceId('Microsoft.Network/networkSecurityPerimeters', variables('NetSecPerimName'))]"
            ],
            "properties": {
                "direction": "Inbound",
                "addressPrefixes": [],
                "fullyQualifiedDomainNames": [],
                "subscriptions": [
                    {

                    }
                ],
                "emailAddresses": [],
                "phoneNumbers": []
            }
        }
    ]
}