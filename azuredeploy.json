{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "FunctionName": {
            "defaultValue": "logSourceName",
            "type": "string",
            "metadata": {
                "description": "Specifies the name of the Function App. Max char 21"
            }
        },
        "LATableName": {
            "defaultValue": "logSourceName_CL",
            "type": "string",
            "metadata": {
                "description": "Specifies the name of the Log Analytics table to ingest into. Batteries not included."
            }
        },
        "WorkspaceId": {
            "type": "string",
            "metadata": {
                "description": "Specifies the Azure Log Analytics Workspace Id."
            }
        },
        "WorkspaceKey": {
            "type": "securestring",
            "metadata": {
                "description": "Specifies the Azure Log Analytics Workspace Key."
            }
        }
    },
    "variables": {
        "FunctionName"                  : "[concat(toLower(parameters('FunctionName')), uniqueString(resourceGroup().id), uniqueString(subscription().id),'-FA')]",
        "StorageAccountName"            : "[concat(substring(variables('FunctionName'), 0, 20), '-SA')]",
        "StorageContainerName"          : "[concat(substring(variables('FunctionName'), 0, 20), '-2Blob')]",
        "EventGridSubscriptionName"     : "[concat(substring(variables('FunctionName'), 0, 20), '-EGS')]",
        "EventGridSubscriptionTopicName": "[concat(substring(variables('FunctionName'), 0, 20), '-EGT')]",
        "KeyVaultName"                  : "[concat(substring(variables('FunctionName'), 0, 20), '-KV')]",
        "LogAnaltyicsUri"               : "[replace(environment().portal, 'https://portal', concat('https://', toLower(parameters('WorkspaceId')), '.ods.opinsights'))]",
        "LogAnalyticsWorkspaceKey"      : "variables('LogAnalyticsWorkspaceKey')",
        "StorageSuffix"                 : "[environment().suffixes.storage]",
        "StorageQueueName"              : "sourcelogsqueue"
    },
    "resources": [
        {
            "apiVersion": "2019-06-01",
            "kind": "StorageV2",
            "location": "[resourceGroup().location]",
            "name": "[variables('StorageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "properties": {
                "encryption": {
                    "keySource": "Microsoft.Storage",
                    "services": {
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    }
                },
                "networkAcls": {
                    "bypass": "AzureServices",
                    "defaultAction": "Allow",
                    "ipRules": [],
                    "virtualNetworkRules": []
                },
                "supportsHttpsTrafficOnly": true
            },
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            }
        },
        {
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('StorageAccountName'), '/default')]",
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', tolower(variables('StorageAccountName')))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            },
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            }
        },
        {
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('StorageAccountName'), '/default')]",
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', tolower(variables('StorageAccountName')))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            },
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            }
        },
        {
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('StorageAccountName'), '/default')]",
            "type": "Microsoft.Storage/storageAccounts/queueServices",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', tolower(variables('StorageAccountName')))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            },
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            }
        },
        {
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('StorageAccountName'), '/default/azure-webjobs-secrets')]",
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('StorageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('StorageAccountName'), concat('/default/', variables('StorageContainerName')))]",
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('StorageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('StorageAccountName'), concat('/default/', variables('StorageQueueName')))]",
            "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/queueServices', variables('StorageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName'))]"
            ],
            "properties": {
                "publicAccess": "null"
            }
        },
        {
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('StorageAccountName'), '/default/', tolower(variables('StorageAccountName')))]",
            "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', variables('StorageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName'))]"
            ],
            "properties": {
                "shareQuota": 5120
            }
        },
        {
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('StorageAccountName'), '/default/azure-webjobs-hosts')]",
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('StorageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "apiVersion": "2020-01-01-preview",
            "name": "[concat(variables('storageAccountName'), '/Microsoft.EventGrid/', variables('EventGridSubscriptionTopicName'))]",
            "type": "Microsoft.EventGrid/eventSubscriptions",
            "dependsOn": [
                "[variables('storageAccountName')]"
            ],
            "properties": {
                "eventDeliverySchema": "EventGridSchema",
                "destination": {
                    "endpointType": "StorageQueue",
                    "properties": {
                        "queueName": "[variables('StorageQueueName')]",
                        "resourceId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
                    }
                },
                "filter": {
                    "includedEventTypes": [
                        "Microsoft.Storage.BlobCreated"
                    ]
                }
            }
        },
        {
            "apiVersion": "2020-04-01-preview",
            "location": "[resourceGroup().location]",
            "name": "[variables('EventGridSubscriptionTopicName')]",
            "type": "Microsoft.EventGrid/systemTopics",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName'))]"
            ],
            "properties": {
                "source": "[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName'))]",
                "topicType": "Microsoft.Storage.StorageAccounts"
            }
        },
        {
            "apiVersion": "2018-02-01",
            "kind": "functionapp",
            "location": "[resourceGroup().location]",
            "name": "[variables('FunctionName')]",
            "type": "Microsoft.Web/serverfarms",
            "properties": {
                "name": "[variables('FunctionName')]",
                "numberOfWorkers": "1",
                "workerSize": "0",
                "workerSizeId": "0"
            },
            "sku": {
                "name": "Y1",
                "tier": "Dynamic"
            }
        },
        {
            "apiVersion": "2018-11-01",
            "kind": "functionapp",
            "location": "[resourceGroup().location]",
            "name": "[variables('FunctionName')]",
            "type": "Microsoft.Web/sites",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', tolower(variables('StorageAccountName')))]",
                "[resourceId('Microsoft.Web/serverfarms', variables('FunctionName'))]",
                "[resourceId('Microsoft.Insights/components', variables('FunctionName'))]"
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "name": "[variables('FunctionName')]",
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('FunctionName'))]",
                "siteConfig": {
                    "powerShellVersion": "~7"
                },
                "alwaysOn": true,
                "clientAffinityEnabled": true,
                "httpsOnly": true
            },
            "resources": [
                {
                    "apiVersion": "2018-11-01",
                    "name": "appsettings",
                    "type": "config",
                    "dependsOn": [
                        "[concat('Microsoft.Web/sites/', variables('FunctionName'))]",
                        "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('KeyVaultName'), variables('LogAnalyticsWorkspaceKey'))]"
                    ],
                    "properties": {
                        "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('Microsoft.insights/components', variables('FunctionName')), '2015-05-01').InstrumentationKey]",
                        "APPLICATIONINSIGHTS_CONNECTION_STRING": "[reference(resourceId('microsoft.insights/components', variables('FunctionName')), '2015-05-01').ConnectionString]",
                        "AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=', toLower(variables('StorageAccountName')),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', toLower(variables('StorageAccountName'))), '2019-06-01').keys[0].value, ';EndpointSuffix=',toLower(variables('StorageSuffix')))]",
                        "FUNCTIONS_EXTENSION_VERSION": "~3",
                        "FUNCTIONS_WORKER_RUNTIME": "powershell",
                        "LAURI": "[variables('LogAnaltyicsUri')]",
                        "LATableName": "[parameters('LATableName')]",
                        "StorageQueueName": "variables('StorageQueueName')",
                        "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING": "[concat('DefaultEndpointsProtocol=https;AccountName=', toLower(variables('StorageAccountName')),';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', toLower(variables('StorageAccountName'))), '2019-06-01').keys[0].value, ';EndpointSuffix=',toLower(variables('StorageSuffix')))]",
                        "WEBSITE_CONTENTSHARE": "[toLower(variables('FunctionName'))]",
                        "WEBSITE_RUN_FROM_PACKAGE": "https://github.com/MfMpEng/AzureStorageAccountBlobsIngestion/blob/main/StorageAccountBlobsIngestion/StorageAccountBlobsIngestion.zip?raw=true",
                        "WorkspaceId": "[parameters('WorkspaceId')]",
                        "WorkspaceKey": "[concat('@Microsoft.KeyVault(SecretUri=', reference(variables('LogAnalyticsWorkspaceKey')).secretUriWithVersion, ')')]"
                    }
                }
            ]
        },
        {
            "apiVersion": "2016-10-01",
            "location": "[resourceGroup().location]",
            "name": "[variables('KeyVaultName')]",
            "type": "Microsoft.KeyVault/vaults",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('FunctionName'))]"
            ],
            "properties": {
                "tenantId": "[subscription().tenantId]",
                "accessPolicies": [
                    {
                        "objectId": "[reference(resourceId('Microsoft.Web/sites', variables('FunctionName')),'2019-08-01', 'full').identity.principalId]",
                        "tenantId": "[subscription().tenantId]",
                        "permissions": {
                            "secrets": [
                                "get",
                                "list"
                            ]
                        }
                    }
                ],
                "sku": {
                    "family": "A",
                    "name": "standard"
                },
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": true,
                "enableSoftDelete": true
            },
            "resources": [
                {
                    "apiVersion": "2016-10-01",
                    "name": "[variables('LogAnalyticsWorkspaceKey')]",
                    "type": "secrets",
                    "dependsOn": [
                        "[resourceId('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]"
                    ],
                    "properties": {
                        "contentType": "string",
                        "value": "[parameters('WorkspaceKey')]",
                        "attributes": {
                            "enabled": true
                        }
                    }
                }
            ]
        },
        {
            "apiVersion": "2020-02-02",
            "kind": "web",
            "location": "[resourceGroup().location]",
            "name": "[variables('FunctionName')]",
            "type": "Microsoft.Insights/components",
            "properties": {
                "RetentionInDays": 30,
                "Application_Type": "web",
                "ApplicationId": "[variables('FunctionName')]",
                "WorkspaceResourceId": "5ee0f11b-5ce1-4baa-ba7c-65d88bd721b2",
                "ImmediatePurgeDataOn30Days": true
            }
        }
    ]
}